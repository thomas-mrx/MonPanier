from django.db import models

class Food(models.Model):
    """Model representing a food product"""
    code = models.CharField(max_length=64, unique=True)
    url = models.CharField(max_length=2048)
    creator = models.CharField(max_length=128, blank=True)
    created_t = models.CharField(max_length=16)
    created_datetime = models.CharField(max_length=32)
    last_modified_t = models.CharField(max_length=16)
    last_modified_datetime = models.CharField(max_length=32)
    last_modified_by = models.CharField(max_length=128, blank=True)
    product_name = models.CharField(max_length=512, blank=True)
    abbreviated_product_name = models.CharField(max_length=128, blank=True)
    generic_name = models.CharField(max_length=2048, blank=True)
    quantity = models.CharField(max_length=512, blank=True)
    packaging = models.CharField(max_length=4096, blank=True)
    packaging_tags = models.CharField(max_length=4096, blank=True)
    packaging_en = models.CharField(max_length=4096, blank=True)
    packaging_text = models.CharField(max_length=4096, blank=True)
    brands = models.CharField(max_length=16384, blank=True)
    brands_tags = models.CharField(max_length=16384, blank=True)
    categories = models.CharField(max_length=1024, blank=True)
    categories_tags = models.CharField(max_length=1024, blank=True)
    categories_en = models.CharField(max_length=1024, blank=True)
    origins = models.CharField(max_length=4096, blank=True)
    origins_tags = models.CharField(max_length=4096, blank=True)
    origins_en = models.CharField(max_length=4096, blank=True)
    manufacturing_places = models.CharField(max_length=2048, blank=True)
    manufacturing_places_tags = models.CharField(max_length=2048, blank=True)
    labels = models.CharField(max_length=2048, blank=True)
    labels_tags = models.CharField(max_length=2048, blank=True)
    labels_en = models.CharField(max_length=2048, blank=True)
    emb_codes = models.CharField(max_length=512, blank=True)
    emb_codes_tags = models.CharField(max_length=512, blank=True)
    first_packaging_code_geo = models.CharField(max_length=32, blank=True)
    cities = models.CharField(max_length=1, blank=True)
    cities_tags = models.CharField(max_length=512, blank=True)
    purchase_places = models.CharField(max_length=2048, blank=True)
    stores = models.CharField(max_length=512, blank=True)
    countries = models.CharField(max_length=2048, blank=True)
    countries_tags = models.CharField(max_length=4096, blank=True)
    countries_en = models.CharField(max_length=2048, blank=True)
    ingredients_text = models.CharField(max_length=16384, blank=True)
    ingredients_tags = models.CharField(max_length=16384, blank=True)
    ingredients_analysis_tags = models.CharField(max_length=128, blank=True)
    allergens = models.CharField(max_length=1024, blank=True)
    allergens_en = models.CharField(max_length=1, blank=True)
    traces = models.CharField(max_length=1024, blank=True)
    traces_tags = models.CharField(max_length=1024, blank=True)
    traces_en = models.CharField(max_length=1024, blank=True)
    serving_size = models.CharField(max_length=512, blank=True)
    serving_quantity = models.CharField(max_length=32, blank=True)
    no_nutrition_data = models.CharField(max_length=8, blank=True)
    additives_n = models.CharField(max_length=2, blank=True)
    additives = models.CharField(max_length=4096, blank=True)
    additives_tags = models.CharField(max_length=512, blank=True)
    additives_en = models.CharField(max_length=2048, blank=True)
    nutriscore_score = models.CharField(max_length=4, blank=True)
    nutriscore_grade = models.CharField(max_length=1, blank=True)
    nova_group = models.CharField(max_length=1, blank=True)
    pnns_groups_1 = models.CharField(max_length=32, blank=True)
    pnns_groups_2 = models.CharField(max_length=32, blank=True)
    food_groups = models.CharField(max_length=64, blank=True)
    food_groups_tags = models.CharField(max_length=64, blank=True)
    food_groups_en = models.CharField(max_length=64, blank=True)
    states = models.CharField(max_length=1024)
    states_tags = models.CharField(max_length=1024)
    states_en = models.CharField(max_length=512)
    brand_owner = models.CharField(max_length=128, blank=True)
    ecoscore_score = models.CharField(max_length=16, blank=True)
    ecoscore_grade = models.CharField(max_length=16, blank=True)
    nutrient_levels_tags = models.CharField(max_length=128, blank=True)
    product_quantity = models.CharField(max_length=32, blank=True)
    owner = models.CharField(max_length=64, blank=True)
    data_quality_errors_tags = models.CharField(max_length=1024, blank=True)
    unique_scans_n = models.CharField(max_length=4, blank=True)
    popularity_tags = models.CharField(max_length=65536, blank=True)
    completeness = models.CharField(max_length=32, blank=True)
    last_image_t = models.CharField(max_length=16, blank=True)
    last_image_datetime = models.CharField(max_length=32, blank=True)
    main_category = models.CharField(max_length=512, blank=True)
    main_category_en = models.CharField(max_length=512, blank=True)
    image_url = models.CharField(max_length=128, blank=True)
    image_small_url = models.CharField(max_length=128, blank=True)
    image_ingredients_url = models.CharField(max_length=128, blank=True)
    image_ingredients_small_url = models.CharField(max_length=128, blank=True)
    image_nutrition_url = models.CharField(max_length=128, blank=True)
    image_nutrition_small_url = models.CharField(max_length=128, blank=True)
    energy_kj_100g = models.CharField(max_length=16, blank=True)
    energy_kcal_100g = models.CharField(max_length=64, blank=True)
    energy_100g = models.CharField(max_length=64, blank=True)
    energy_from_fat_100g = models.CharField(max_length=8, blank=True)
    fat_100g = models.CharField(max_length=32, blank=True)
    saturated_fat_100g = models.CharField(max_length=32, blank=True)
    butyric_acid_100g = models.CharField(max_length=16, blank=True)
    caproic_acid_100g = models.CharField(max_length=16, blank=True)
    caprylic_acid_100g = models.CharField(max_length=16, blank=True)
    capric_acid_100g = models.CharField(max_length=8, blank=True)
    lauric_acid_100g = models.CharField(max_length=16, blank=True)
    myristic_acid_100g = models.CharField(max_length=16, blank=True)
    palmitic_acid_100g = models.CharField(max_length=16, blank=True)
    stearic_acid_100g = models.CharField(max_length=16, blank=True)
    arachidic_acid_100g = models.CharField(max_length=16, blank=True)
    behenic_acid_100g = models.CharField(max_length=16, blank=True)
    lignoceric_acid_100g = models.CharField(max_length=16, blank=True)
    cerotic_acid_100g = models.CharField(max_length=16, blank=True)
    montanic_acid_100g = models.CharField(max_length=16, blank=True)
    melissic_acid_100g = models.CharField(max_length=16, blank=True)
    unsaturated_fat_100g = models.CharField(max_length=4, blank=True)
    monounsaturated_fat_100g = models.CharField(max_length=16, blank=True)
    polyunsaturated_fat_100g = models.CharField(max_length=16, blank=True)
    omega_3_fat_100g = models.CharField(max_length=16, blank=True)
    alpha_linolenic_acid_100g = models.CharField(max_length=16, blank=True)
    eicosapentaenoic_acid_100g = models.CharField(max_length=16, blank=True)
    docosahexaenoic_acid_100g = models.CharField(max_length=16, blank=True)
    omega_6_fat_100g = models.CharField(max_length=16, blank=True)
    linoleic_acid_100g = models.CharField(max_length=16, blank=True)
    arachidonic_acid_100g = models.CharField(max_length=16, blank=True)
    gamma_linolenic_acid_100g = models.CharField(max_length=16, blank=True)
    dihomo_gamma_linolenic_acid_100g = models.CharField(max_length=8, blank=True)
    omega_9_fat_100g = models.CharField(max_length=16, blank=True)
    oleic_acid_100g = models.CharField(max_length=16, blank=True)
    elaidic_acid_100g = models.CharField(max_length=16, blank=True)
    gondoic_acid_100g = models.CharField(max_length=16, blank=True)
    mead_acid_100g = models.CharField(max_length=16, blank=True)
    erucic_acid_100g = models.CharField(max_length=16, blank=True)
    nervonic_acid_100g = models.CharField(max_length=16, blank=True)
    trans_fat_100g = models.CharField(max_length=16, blank=True)
    cholesterol_100g = models.CharField(max_length=16, blank=True)
    carbohydrates_100g = models.CharField(max_length=32, blank=True)
    sugars_100g = models.CharField(max_length=32, blank=True)
    added_sugars_100g = models.CharField(max_length=8, blank=True)
    sucrose_100g = models.CharField(max_length=16, blank=True)
    glucose_100g = models.CharField(max_length=16, blank=True)
    fructose_100g = models.CharField(max_length=8, blank=True)
    lactose_100g = models.CharField(max_length=16, blank=True)
    maltose_100g = models.CharField(max_length=16, blank=True)
    maltodextrins_100g = models.CharField(max_length=16, blank=True)
    starch_100g = models.CharField(max_length=16, blank=True)
    polyols_100g = models.CharField(max_length=16, blank=True)
    erythritol_100g = models.CharField(max_length=4, blank=True)
    fiber_100g = models.CharField(max_length=64, blank=True)
    soluble_fiber_100g = models.CharField(max_length=8, blank=True)
    insoluble_fiber_100g = models.CharField(max_length=8, blank=True)
    proteins_100g = models.CharField(max_length=32, blank=True)
    casein_100g = models.CharField(max_length=16, blank=True)
    serum_proteins_100g = models.CharField(max_length=8, blank=True)
    nucleotides_100g = models.CharField(max_length=8, blank=True)
    salt_100g = models.CharField(max_length=32, blank=True)
    added_salt_100g = models.CharField(max_length=4, blank=True)
    sodium_100g = models.CharField(max_length=32, blank=True)
    alcohol_100g = models.CharField(max_length=32, blank=True)
    vitamin_a_100g = models.CharField(max_length=16, blank=True)
    beta_carotene_100g = models.CharField(max_length=16, blank=True)
    vitamin_d_100g = models.CharField(max_length=16, blank=True)
    vitamin_e_100g = models.CharField(max_length=32, blank=True)
    vitamin_k_100g = models.CharField(max_length=16, blank=True)
    vitamin_c_100g = models.CharField(max_length=16, blank=True)
    vitamin_b1_100g = models.CharField(max_length=16, blank=True)
    vitamin_b2_100g = models.CharField(max_length=16, blank=True)
    vitamin_pp_100g = models.CharField(max_length=16, blank=True)
    vitamin_b6_100g = models.CharField(max_length=16, blank=True)
    vitamin_b9_100g = models.CharField(max_length=16, blank=True)
    folates_100g = models.CharField(max_length=16, blank=True)
    vitamin_b12_100g = models.CharField(max_length=16, blank=True)
    biotin_100g = models.CharField(max_length=16, blank=True)
    pantothenic_acid_100g = models.CharField(max_length=16, blank=True)
    silica_100g = models.CharField(max_length=16, blank=True)
    bicarbonate_100g = models.CharField(max_length=16, blank=True)
    potassium_100g = models.CharField(max_length=32, blank=True)
    chloride_100g = models.CharField(max_length=16, blank=True)
    calcium_100g = models.CharField(max_length=32, blank=True)
    phosphorus_100g = models.CharField(max_length=16, blank=True)
    iron_100g = models.CharField(max_length=16, blank=True)
    magnesium_100g = models.CharField(max_length=16, blank=True)
    zinc_100g = models.CharField(max_length=32, blank=True)
    copper_100g = models.CharField(max_length=16, blank=True)
    manganese_100g = models.CharField(max_length=16, blank=True)
    fluoride_100g = models.CharField(max_length=16, blank=True)
    selenium_100g = models.CharField(max_length=16, blank=True)
    chromium_100g = models.CharField(max_length=16, blank=True)
    molybdenum_100g = models.CharField(max_length=16, blank=True)
    iodine_100g = models.CharField(max_length=16, blank=True)
    caffeine_100g = models.CharField(max_length=16, blank=True)
    taurine_100g = models.CharField(max_length=16, blank=True)
    ph_100g = models.CharField(max_length=8, blank=True)
    fruits_vegetables_nuts_100g = models.CharField(max_length=8, blank=True)
    fruits_vegetables_nuts_dried_100g = models.CharField(max_length=8, blank=True)
    fruits_vegetables_nuts_estimate_100g = models.CharField(max_length=8, blank=True)
    fruits_vegetables_nuts_estimate_from_ingredients_100g = models.CharField(max_length=32, blank=True)
    collagen_meat_protein_ratio_100g = models.CharField(max_length=8, blank=True)
    cocoa_100g = models.CharField(max_length=8, blank=True)
    chlorophyl_100g = models.CharField(max_length=8, blank=True)
    carbon_footprint_100g = models.CharField(max_length=16, blank=True)
    carbon_footprint_from_meat_or_fish_100g = models.CharField(max_length=8, blank=True)
    nutrition_score_fr_100g = models.CharField(max_length=4, blank=True)
    nutrition_score_uk_100g = models.CharField(max_length=2, blank=True)
    glycemic_index_100g = models.CharField(max_length=4, blank=True)
    water_hardness_100g = models.CharField(max_length=8, blank=True)
    choline_100g = models.CharField(max_length=8, blank=True)
    phylloquinone_100g = models.CharField(max_length=16, blank=True)
    beta_glucan_100g = models.CharField(max_length=4, blank=True)
    inositol_100g = models.CharField(max_length=8, blank=True)
    carnitine_100g = models.CharField(max_length=8, blank=True)
    
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    # Metadata
    class Meta:
        ordering = ['code', '-created_at']

    def __str__(self):
        """String for representing the MyModelName object (in Admin site etc.)."""
        return self.code